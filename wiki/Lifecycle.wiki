  * A web browser is opened to the root address.
  * The web layer intercepts the call and authenticates the user.
    * The security framework intercepts the call and validates the data.
    * The security framework redirects the user to the page he asked for before being intercepted.
  * The GUI create a session. It needs to ask for a unique ID to the backend.
    * GUI calls Session.createSession()
    * Backend creates a memory space for this session and generates a unique ID for it.
    * GUI has to store the returned ID and send it along every next request, until it closes the session.
  * The user creates a connection by giving parameters.
    * For ad-hoc mondrian connections :
      * The user inputs his connection infos.
      * The user selects a schema file to use and uploads it.
      * Server validates and stores the file.
        * FileUploadController
      * Server Sends the file path back to the GUI.
      * GUI sends a connect request
        * Session.connect(...)
      * Server returns true/false
  * The GUI asks for the list of available cubes.
    * GUI Sends out a discovery request
      * Discovery.getCubes(...)
    * Server returns available cube names.
  * A cube is selected and a new query is created.
    * User right clicks or double clicks on cube in the list.
    * GUI notifies server of cube selection
      * Session.setCurrentCube(...)
    * GUI asks to create new query.
      * Session.createNewQuery(...)
    * GUI stores the query name for later use. It can still get the list of current opened queries via getQueries() or the current one by getCurrentQuery()
  * GUI refreshes dimensions list
    * GUI asks for available dimensions.
      * Discovery.getDimensions(...)
    * Server sends back list of dimension names.
    * GUI populates contents of dimensions.
      * GUI iterates on dimensions list and discovers each dimension members.
        * Discovery.getMembers(...)
      * Server sends back members list.

To be continued...